Part 1.


    Check the symbol rate using the stty command (L5.4).  What is the current value?
	baud rate: 38400
    In minicom, lower the baud to the lowest available setting.  Do you notice a difference in the response?
	I could not notice a difference, I tried going to a baud rate of 300.
    Enable local echo using CTRL-A E.  Type some characters and copy the output for submission.  Does the output depend on how fast you type?
	HHeelllloo  tteerrmmiinnaall,,  II  aamm  AAxxeell..
	Sometimes when typing fast, the next character I type comes before the echo.
    Close minicom and check the symbol rate again.  What is the value now?
	speed 9600 baud; rows 0; columns 0; line = 0;
	So the baud rate is now 9600.

Part 2.

	The following was run with minicom open in another terminal.

    Try running the code given below.  What is the output? 
	The following was read in [20]: Hello Raspberry Pi!
    Now add a newline character \n to the end of the string.  How does the output change?  Explain.
	The following was read in [20]: Hello Raspberry Pi!

	The output doesnt change except there is a newline in the second case which I suspect is some error,
	I think what is supposed to happen is that the message shouldn't be read without the \n character but there is
	an implied stopbit in the string.


    Do you obtain a response by typing any single character?
	No, with canonical mode I have to press the enter button to get a response.
    In your program, set the symbol rate to 57600 baud and the frame format to 8-n-1.
    Check the port settings after your program finishes.  Comment on the changes.
	Using stty, I observe that the baud rate is now 57600.

Part 3.

    Do you obtain a response by typing any single character?
	Yes!
    Set the frame format to 8-e-2.
    Store the initial port settings and reset them at the end of your program.
    Using stty, check the settings before and after running your program.
	The settings were same before and after.

	sample output: HHeelllloo  tetrermmiinnaall!!









